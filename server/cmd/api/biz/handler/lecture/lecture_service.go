// Code generated by hertz generator.

package lecture

import (
	"context"

	base "github.com/Rinai-R/ApexLecture/server/cmd/api/biz/model/base"
	lecture "github.com/Rinai-R/ApexLecture/server/cmd/api/biz/model/lecture"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// CreateLecture .
// @router lecture/ [POST]
func CreateLecture(ctx context.Context, c *app.RequestContext) {
	var err error
	var req base.NilResponse
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// OfferLecture .
// @router lecture/:roomid/offer [POST]
func OfferLecture(ctx context.Context, c *app.RequestContext) {
	var err error
	var req lecture.OfferRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(lecture.OfferResponse)

	c.JSON(consts.StatusOK, resp)
}

// AttendLecture .
// @router lecture/:roomid/attend [POST]
func AttendLecture(ctx context.Context, c *app.RequestContext) {
	var err error
	var req lecture.AttendRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.BaseResponse)

	c.JSON(consts.StatusOK, resp)
}

// Inroom .
// @router lecture/:roomid/ws [GET]
func Inroom(ctx context.Context, c *app.RequestContext) {
	var err error
	var req base.NilResponse
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}
