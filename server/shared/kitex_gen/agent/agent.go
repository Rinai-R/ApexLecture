// Code generated by thriftgo (0.4.1). DO NOT EDIT.

package agent

import (
	"context"
	"fmt"
	"github.com/Rinai-R/ApexLecture/server/shared/kitex_gen/base"
)

type AskRequest struct {
	UserId  int64  `thrift:"userId,1,required" frugal:"1,required,i64" json:"userId"`
	RoomId  int64  `thrift:"roomId,2,required" frugal:"2,required,i64" json:"roomId"`
	Content string `thrift:"content,3,required" frugal:"3,required,string" json:"content"`
}

func NewAskRequest() *AskRequest {
	return &AskRequest{}
}

func (p *AskRequest) InitDefault() {
}

func (p *AskRequest) GetUserId() (v int64) {
	return p.UserId
}

func (p *AskRequest) GetRoomId() (v int64) {
	return p.RoomId
}

func (p *AskRequest) GetContent() (v string) {
	return p.Content
}
func (p *AskRequest) SetUserId(val int64) {
	p.UserId = val
}
func (p *AskRequest) SetRoomId(val int64) {
	p.RoomId = val
}
func (p *AskRequest) SetContent(val string) {
	p.Content = val
}

func (p *AskRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AskRequest(%+v)", *p)
}

var fieldIDToName_AskRequest = map[int16]string{
	1: "userId",
	2: "roomId",
	3: "content",
}

type AskResponse struct {
	Response *base.BaseResponse `thrift:"response,1,required" frugal:"1,required,base.BaseResponse" json:"response"`
	Content  string             `thrift:"content,2,required" frugal:"2,required,string" json:"content"`
}

func NewAskResponse() *AskResponse {
	return &AskResponse{}
}

func (p *AskResponse) InitDefault() {
}

var AskResponse_Response_DEFAULT *base.BaseResponse

func (p *AskResponse) GetResponse() (v *base.BaseResponse) {
	if !p.IsSetResponse() {
		return AskResponse_Response_DEFAULT
	}
	return p.Response
}

func (p *AskResponse) GetContent() (v string) {
	return p.Content
}
func (p *AskResponse) SetResponse(val *base.BaseResponse) {
	p.Response = val
}
func (p *AskResponse) SetContent(val string) {
	p.Content = val
}

func (p *AskResponse) IsSetResponse() bool {
	return p.Response != nil
}

func (p *AskResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AskResponse(%+v)", *p)
}

var fieldIDToName_AskResponse = map[int16]string{
	1: "response",
	2: "content",
}

type StartSummaryRequest struct {
	RoomId int64 `thrift:"roomId,2,required" frugal:"2,required,i64" json:"roomId"`
}

func NewStartSummaryRequest() *StartSummaryRequest {
	return &StartSummaryRequest{}
}

func (p *StartSummaryRequest) InitDefault() {
}

func (p *StartSummaryRequest) GetRoomId() (v int64) {
	return p.RoomId
}
func (p *StartSummaryRequest) SetRoomId(val int64) {
	p.RoomId = val
}

func (p *StartSummaryRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("StartSummaryRequest(%+v)", *p)
}

var fieldIDToName_StartSummaryRequest = map[int16]string{
	2: "roomId",
}

type StartSummaryResponse struct {
	Response *base.BaseResponse `thrift:"response,1,required" frugal:"1,required,base.BaseResponse" json:"response"`
}

func NewStartSummaryResponse() *StartSummaryResponse {
	return &StartSummaryResponse{}
}

func (p *StartSummaryResponse) InitDefault() {
}

var StartSummaryResponse_Response_DEFAULT *base.BaseResponse

func (p *StartSummaryResponse) GetResponse() (v *base.BaseResponse) {
	if !p.IsSetResponse() {
		return StartSummaryResponse_Response_DEFAULT
	}
	return p.Response
}
func (p *StartSummaryResponse) SetResponse(val *base.BaseResponse) {
	p.Response = val
}

func (p *StartSummaryResponse) IsSetResponse() bool {
	return p.Response != nil
}

func (p *StartSummaryResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("StartSummaryResponse(%+v)", *p)
}

var fieldIDToName_StartSummaryResponse = map[int16]string{
	1: "response",
}

type GetSummaryRequest struct {
	RoomId int64 `thrift:"roomId,2,required" frugal:"2,required,i64" json:"roomId"`
}

func NewGetSummaryRequest() *GetSummaryRequest {
	return &GetSummaryRequest{}
}

func (p *GetSummaryRequest) InitDefault() {
}

func (p *GetSummaryRequest) GetRoomId() (v int64) {
	return p.RoomId
}
func (p *GetSummaryRequest) SetRoomId(val int64) {
	p.RoomId = val
}

func (p *GetSummaryRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetSummaryRequest(%+v)", *p)
}

var fieldIDToName_GetSummaryRequest = map[int16]string{
	2: "roomId",
}

type GetSummaryResponse struct {
	Response *base.BaseResponse `thrift:"response,1,required" frugal:"1,required,base.BaseResponse" json:"response"`
	Summary  string             `thrift:"summary,2,required" frugal:"2,required,string" json:"summary"`
}

func NewGetSummaryResponse() *GetSummaryResponse {
	return &GetSummaryResponse{}
}

func (p *GetSummaryResponse) InitDefault() {
}

var GetSummaryResponse_Response_DEFAULT *base.BaseResponse

func (p *GetSummaryResponse) GetResponse() (v *base.BaseResponse) {
	if !p.IsSetResponse() {
		return GetSummaryResponse_Response_DEFAULT
	}
	return p.Response
}

func (p *GetSummaryResponse) GetSummary() (v string) {
	return p.Summary
}
func (p *GetSummaryResponse) SetResponse(val *base.BaseResponse) {
	p.Response = val
}
func (p *GetSummaryResponse) SetSummary(val string) {
	p.Summary = val
}

func (p *GetSummaryResponse) IsSetResponse() bool {
	return p.Response != nil
}

func (p *GetSummaryResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetSummaryResponse(%+v)", *p)
}

var fieldIDToName_GetSummaryResponse = map[int16]string{
	1: "response",
	2: "summary",
}

type AgentService interface {
	Ask(ctx context.Context, askRequest *AskRequest) (r *AskResponse, err error)

	StartSummary(ctx context.Context, summaryRequest *StartSummaryRequest) (r *StartSummaryResponse, err error)

	GetSummary(ctx context.Context, summaryRequest *GetSummaryRequest) (r *GetSummaryResponse, err error)
}

type AgentServiceAskArgs struct {
	AskRequest *AskRequest `thrift:"askRequest,1" frugal:"1,default,AskRequest" json:"askRequest"`
}

func NewAgentServiceAskArgs() *AgentServiceAskArgs {
	return &AgentServiceAskArgs{}
}

func (p *AgentServiceAskArgs) InitDefault() {
}

var AgentServiceAskArgs_AskRequest_DEFAULT *AskRequest

func (p *AgentServiceAskArgs) GetAskRequest() (v *AskRequest) {
	if !p.IsSetAskRequest() {
		return AgentServiceAskArgs_AskRequest_DEFAULT
	}
	return p.AskRequest
}
func (p *AgentServiceAskArgs) SetAskRequest(val *AskRequest) {
	p.AskRequest = val
}

func (p *AgentServiceAskArgs) IsSetAskRequest() bool {
	return p.AskRequest != nil
}

func (p *AgentServiceAskArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceAskArgs(%+v)", *p)
}

var fieldIDToName_AgentServiceAskArgs = map[int16]string{
	1: "askRequest",
}

type AgentServiceAskResult struct {
	Success *AskResponse `thrift:"success,0,optional" frugal:"0,optional,AskResponse" json:"success,omitempty"`
}

func NewAgentServiceAskResult() *AgentServiceAskResult {
	return &AgentServiceAskResult{}
}

func (p *AgentServiceAskResult) InitDefault() {
}

var AgentServiceAskResult_Success_DEFAULT *AskResponse

func (p *AgentServiceAskResult) GetSuccess() (v *AskResponse) {
	if !p.IsSetSuccess() {
		return AgentServiceAskResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceAskResult) SetSuccess(x interface{}) {
	p.Success = x.(*AskResponse)
}

func (p *AgentServiceAskResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceAskResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceAskResult(%+v)", *p)
}

var fieldIDToName_AgentServiceAskResult = map[int16]string{
	0: "success",
}

type AgentServiceStartSummaryArgs struct {
	SummaryRequest *StartSummaryRequest `thrift:"summaryRequest,1" frugal:"1,default,StartSummaryRequest" json:"summaryRequest"`
}

func NewAgentServiceStartSummaryArgs() *AgentServiceStartSummaryArgs {
	return &AgentServiceStartSummaryArgs{}
}

func (p *AgentServiceStartSummaryArgs) InitDefault() {
}

var AgentServiceStartSummaryArgs_SummaryRequest_DEFAULT *StartSummaryRequest

func (p *AgentServiceStartSummaryArgs) GetSummaryRequest() (v *StartSummaryRequest) {
	if !p.IsSetSummaryRequest() {
		return AgentServiceStartSummaryArgs_SummaryRequest_DEFAULT
	}
	return p.SummaryRequest
}
func (p *AgentServiceStartSummaryArgs) SetSummaryRequest(val *StartSummaryRequest) {
	p.SummaryRequest = val
}

func (p *AgentServiceStartSummaryArgs) IsSetSummaryRequest() bool {
	return p.SummaryRequest != nil
}

func (p *AgentServiceStartSummaryArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceStartSummaryArgs(%+v)", *p)
}

var fieldIDToName_AgentServiceStartSummaryArgs = map[int16]string{
	1: "summaryRequest",
}

type AgentServiceStartSummaryResult struct {
	Success *StartSummaryResponse `thrift:"success,0,optional" frugal:"0,optional,StartSummaryResponse" json:"success,omitempty"`
}

func NewAgentServiceStartSummaryResult() *AgentServiceStartSummaryResult {
	return &AgentServiceStartSummaryResult{}
}

func (p *AgentServiceStartSummaryResult) InitDefault() {
}

var AgentServiceStartSummaryResult_Success_DEFAULT *StartSummaryResponse

func (p *AgentServiceStartSummaryResult) GetSuccess() (v *StartSummaryResponse) {
	if !p.IsSetSuccess() {
		return AgentServiceStartSummaryResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceStartSummaryResult) SetSuccess(x interface{}) {
	p.Success = x.(*StartSummaryResponse)
}

func (p *AgentServiceStartSummaryResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceStartSummaryResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceStartSummaryResult(%+v)", *p)
}

var fieldIDToName_AgentServiceStartSummaryResult = map[int16]string{
	0: "success",
}

type AgentServiceGetSummaryArgs struct {
	SummaryRequest *GetSummaryRequest `thrift:"summaryRequest,1" frugal:"1,default,GetSummaryRequest" json:"summaryRequest"`
}

func NewAgentServiceGetSummaryArgs() *AgentServiceGetSummaryArgs {
	return &AgentServiceGetSummaryArgs{}
}

func (p *AgentServiceGetSummaryArgs) InitDefault() {
}

var AgentServiceGetSummaryArgs_SummaryRequest_DEFAULT *GetSummaryRequest

func (p *AgentServiceGetSummaryArgs) GetSummaryRequest() (v *GetSummaryRequest) {
	if !p.IsSetSummaryRequest() {
		return AgentServiceGetSummaryArgs_SummaryRequest_DEFAULT
	}
	return p.SummaryRequest
}
func (p *AgentServiceGetSummaryArgs) SetSummaryRequest(val *GetSummaryRequest) {
	p.SummaryRequest = val
}

func (p *AgentServiceGetSummaryArgs) IsSetSummaryRequest() bool {
	return p.SummaryRequest != nil
}

func (p *AgentServiceGetSummaryArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceGetSummaryArgs(%+v)", *p)
}

var fieldIDToName_AgentServiceGetSummaryArgs = map[int16]string{
	1: "summaryRequest",
}

type AgentServiceGetSummaryResult struct {
	Success *GetSummaryResponse `thrift:"success,0,optional" frugal:"0,optional,GetSummaryResponse" json:"success,omitempty"`
}

func NewAgentServiceGetSummaryResult() *AgentServiceGetSummaryResult {
	return &AgentServiceGetSummaryResult{}
}

func (p *AgentServiceGetSummaryResult) InitDefault() {
}

var AgentServiceGetSummaryResult_Success_DEFAULT *GetSummaryResponse

func (p *AgentServiceGetSummaryResult) GetSuccess() (v *GetSummaryResponse) {
	if !p.IsSetSuccess() {
		return AgentServiceGetSummaryResult_Success_DEFAULT
	}
	return p.Success
}
func (p *AgentServiceGetSummaryResult) SetSuccess(x interface{}) {
	p.Success = x.(*GetSummaryResponse)
}

func (p *AgentServiceGetSummaryResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *AgentServiceGetSummaryResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AgentServiceGetSummaryResult(%+v)", *p)
}

var fieldIDToName_AgentServiceGetSummaryResult = map[int16]string{
	0: "success",
}
